.. _INSTALLATION:

============
Installation
============

The :term:`FiPy` finite volume PDE solver relies on several
third-party packages.  It is *best to obtain and install those first*
before attempting to install :term:`FiPy`. This document explains how
to install :term:`FiPy` not how to use it. See the :ref:`USAGE`
document for details on how to use :term:`FiPy`.

.. note::
   
   It may be useful to set up a :ref:`ENVIRONMENT` before beginning
   the installation process.

.. only:: html

   .. note::

      By selecting the links on this page, you will be leaving NIST
      webspace. We have provided these links to other web sites because
      they may have information that would be of interest to you. No
      inferences should be drawn on account of other sites being
      referenced, or not, from this page. There may be other web sites that
      are more appropriate for your purpose. NIST does not necessarily
      endorse the views expressed, or concur with the facts presented on
      these sites. Further, NIST does not endorse any commercial products
      that may be mentioned on these sites. Please address comments about
      this page to fipy@nist.gov.

--------------------------
Installing Python Packages
--------------------------

In general, it is best to use the following order of precedence when
installing packages:

 * Use the system package manager if possible.
 * Use PyPI_ (the :term:`Python` package index)::

     $ pip install package
 * Download manually, unpack and run::

     $ python setup.py install

Further information about each ``setup.py`` script is available by typing::

     $ python setup.py --help

For more information on custom installs and development with :term:`FiPy`,
read the :ref:`ENVIRONMENT` section of the :ref:`USAGE` document
before beginning the installation process.

Many of the packages listed below have prebuilt installers for
different platforms (particularly for Windows).  These installers can
save considerable time and effort compared to configuring and building
from source, although they frequently comprise somewhat older versions
of the respective code.  Whether building from source or using a
prebuilt installer, please read and follow explicitly any instructions
given in the respective packages' :file:`README` and
:file:`INSTALLATION` files.

.. _PyPI:

PyPI
====

http://pypi.python.org/pypi

`PyPI`_ is a package manager for :term:`Python` packages. To use
PyPI_, the `Setuptools`_ package needs to be installed. Once this is
available, PyPI_ can be installed with::

     $ easy_install pip

.. warning::

   PyPI_ takes care of dependencies that are themselves :term:`Python`
   packages. It does not deal with non-:term:`Python` dependencies.

.. _Setuptools: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://pypi.python.org/pypi/setuptools

--------------
Obtaining FiPy
--------------

:term:`FiPy` is freely available for download via Subversion_ or as a
compressed archive from
<http://www.ctcms.nist.gov/fipy/download>. Please see
:ref:`documentation:SVN` for instructions on obtaining :term:`FiPy`
with Subversion_.

.. warning::

   Keep in mind that if you choose to download the `compressed
   archive`_ you will then need to preserve your changes when upgrades
   to :term:`FiPy` become available (upgrades via Subversion_ will handle
   this issue automatically).

.. _compressed archive:      http://www.ctcms.nist.gov/fipy/download/

---------------
Installing FiPy
---------------

Details of the `Required Packages`_ and links are given below and in
`platform-specific instructions`_, but for the courageous and the
impatient, :term:`FiPy` can be up and running quickly by simply
installing the following prerequisite packages on your system:

 * Python_

 * NumPy_ 
 
 * A solver from the list of :ref:`SOLVERS` (see the :ref:`SOLVERS` discussion)

 * A viewer from the list of :ref:`VIEWERS` (not strictly necessary just to run the tests)
 
Other :ref:`OPTIONALPACKAGES` add greatly to :term:`FiPy`'s
capabilities, but are not necessary for an initial installation or to
simply run the test suite.

It is not necessary to formally install :term:`FiPy`, but if you wish
to do so and you are confident that all of the requisite packages have
been installed properly, you can install it by typing::

    $ pip install fipy

or by unpacking the archive and typing::
  
    $ python setup.py install

at the command line in the base :term:`FiPy` directory.
Alternatively, you may choose not to formally install :term:`FiPy` and
to simply work within the base directory instead. In this case or if
you are making a non-standard install (without admin privileges), read
the :ref:`ENVIRONMENT` section of the :ref:`USAGE` document before
beginning the installation process.

.. _REQUIREDPACKAGES:

-----------------
Required Packages
-----------------

.. warning:

    :term:`FiPy` will not run if the following items are not
    installed.

Python
======

http://www.python.org/

:term:`FiPy` is written in the :term:`Python` language and requires a
:term:`Python` installation to run. :term:`Python` comes pre-installed
on many operating systems, which you can check by opening a terminal
and typing ``python``, *e.g.*::

    $ python
    Python 2.3 (#1, Sep 13 2003, 00:49:11) 
    ...
    Type "help", "copyright", "credits" or "license" for more information.
    >>> 

If necessary, you can download_ and install it for your platform
<http://www.python.org/download>.

.. note::

   :term:`FiPy` requires at least version 2.5 of :term:`Python`. See
   `Running under Python 3` for instructions on how to run
   :term:`FiPy` with `Python 3.0`_.

.. _Python 3.0:   http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.python.org/download/releases/3.0/
.. _download: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.python.org/download/

:term:`Python` along with many of :term:`FiPy`'s required and optional
packages is available with one of the following :term:`Python`
distributions.

Enthought Python Distribution
-----------------------------

http://www.enthought.com/epd

This installer provides a very large number of useful scientific
packages for :term:`Python`, including :term:`Python`, :term:`NumPy`,
:term:`SciPy`, :term:`Matplotlib`, and :term:`IPython`.  Installers
are available for Windows_, `Mac OS X`_ and `RedHat Linux`_.

.. attention::

   :term:`PySparse` and :term:`FiPy` are not presently included in EPD, so you will need
   to separately install them manually.

Python(x,y)
-----------

http://www.pythonxy.com/

Another comprehensive :term:`Python` package installer for scientific
applications, presently only available for Windows_. See
:ref:`WINDOWS-INSTALLATION` for more information.

NumPy
=====

http://numpy.scipy.org

Obtain and install the :term:`NumPy` package. :term:`FiPy` requires at
least version 1.0 of NumPy_.

Solver
======

:term:`FiPy` requires one of either :ref:`PYSPARSE`, :ref:`SCIPY` or
:ref:`TRILINOS`. See the :ref:`SOLVERS` section for further details.

Viewer
======

:term:`FiPy` requires a viewer to see the results of simulations. See
the :ref:`VIEWERS` section for further details.

.. _OPTIONALPACKAGES:

-----------------
Optional Packages
-----------------

.. note:

    The following packages are not required to run :term:`FiPy`, but they can
    be helpful.

Gmsh
====

http://www.geuz.org/gmsh/

:term:`Gmsh` allows the creation of irregular meshes.

SciPy
=====

http://www.scipy.org/

Significantly improved performance has been achieved with the
judicious use of C language inlining (see the
:ref:`FlagsAndEnvironmentVariables` section for more details), via the
:mod:`scipy.weave` module.

.. note:

    A handful of test cases use functions from the :term:`SciPy`
    library and will throw errors if it is missing.

.. _Subversion:       http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://matforge.org/fipy/browser
.. _online Subversion Red Bean book: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://svnbook.red-bean.com

------------------------------
Platform-Specific Instructions
------------------------------

:term:`FiPy` is `tested regularly`_ on `Mac OS X`_ 10.4 "Tiger" and
10.5 "Leopard", `Debian Linux`_, `Ubuntu Linux`_, and `Windows
XP`_. We welcome reports of compatibility with other systems,
particularly if any additional steps are necessary to install (see
`Miscellaneous Build Recipes`_ for user contributed installation
tips).

The only elements of :term:`FiPy` that are likely to be
platform-dependent are the :ref:`VIEWERS` but at least one viewer
should work on each platform.  All other aspects should function on
any platform that has a recent :term:`Python` installation.

The following links provide platform specific instructions:

.. toctree::
   :maxdepth: 2

   MACOSX-INSTALLATION
   WINDOWS-INSTALLATION
   UBUNTU-DEBIAN-INSTALLATION
   documentation/SVN

.. _tested regularly: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://matforge.org/fipy/build
.. _Mac OS X: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.apple.com/macosx/
.. _Debian Linux: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.debian.org/
.. _RedHat Linux: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.redhat.com/
.. _Ubuntu Linux: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.ubuntu.com/
.. _Windows: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.microsoft.com/windows/
.. _Windows XP: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.microsoft.com/windowsxp/
.. _Windows 2000: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.microsoft.com/windows2000/

Miscellaneous Build Recipes
===========================

We often post miscellaneous installation instructions on the
:term:`FiPy` blog_ and wiki_ pages. The most useful of these include:

 * `Installing FiPy on Mac OS X using Homebrew`_
 * `Building a 64-bit scientific python environment for FiPy from source`_
 * `Installing FiPy with PyPI`_

.. note::

    Please feel free to contribute your own build recipes on the wiki_
    if they are significantly different.

.. _Installing FiPy on Mac OS C using Homebrew: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://matforge.org/fipy/wiki/InstallFiPy/MacOSX/HomeBrew
.. _Building a 64-bit scientific python environment for FiPy from source: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://matforge.org/fipy/wiki/InstallFiPy/MacOSX/SnowLeopard
.. _Installing FiPy with PyPI: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://matforge.org/fipy/wiki/InstallFiPy/PipInstallsPython
.. _wiki: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://matforge.org/fipy
.. _blog: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://matforge.org/fipy/blog
