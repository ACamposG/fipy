===========================
Simple Windows Installation
===========================

These instructions are simple step by step instructions for the
`Windows XP`_ and `Windows 2000`_ platforms. Please see the more
general |INSTALLATION-txt| for detailed installation instructions.
These step by step instructions are not the only way to set up |FiPy|
on a Windows OS but represent the most expedient way from our
experience to have a usable installation up and running.

.. note

    The first five steps require downloading installation .exe binary
    files from various web sites. When given the choice to run (open)
    or save these files it is best to simply choose run (open).

.. include:: utils/include.txt

.. |INSTALLATION-txt| replace:: |htmlINSTALL| |latexINSTALL|
.. _Windows XP: http://www.microsoft.com/windowsxp/default.mspx
.. _Windows 2000: http://www.microsoft.com/windows2000/

-----------
Instuctions
-----------

Step 1: Install Python
----------------------

http://download.enthought.com/enthought_python-2.3.5-1076-wx26-n238.exe

Download and run the Enthought Edition installer. Open the
``C:\Python23\Lib\site-packages\vtk_python\`` directory in a browser
and move ``vtkRenderingPythonTkWidgets.dll`` to the ``C:\Python23\``
directory.

.. warning:

    Don't download the latest Enthought Edition (build 1078). This
    version's Mayavi doesn't work correctly.

Step 2: Install PyVTK
---------------------

http://www.ctcms.nist.gov/fipy/download/PyVTK-0.4.67.win32.exe

Download and run the PyVTK installer.

Step 3: Install Pysparse   
------------------------

http://prdownloads.sourceforge.net/pysparse/pysparse-0.34.032.win32-py2.3.exe?download

Download and run the PySparse installer.

Step 4: Install |FiPy|
----------------------

http://www.ctcms.nist.gov/fipy/download/FiPy-1.1a1-branch-windows-dist.win32.exe

Download and run the |FiPy| installer.

Step 6: Install Matplotlib
--------------------------

http://prdownloads.sourceforge.net/matplotlib/matplotlib-0.85.win32-py2.3.exe?download

Download and run the Matplotlib installer.

Step 7: Install Gmsh
--------------------

http://www.geuz.org/gmsh/bin/Windows/gmsh-1.61.3-Windows.zip

Download and unpack Gmsh for Windows. Open the unpacked folder with a
browser and copy the ``gmsh.exe`` and ``cygwin1.dll`` files to ``C:\Python23``.

Step 8: Run IDLE_
-----------------

The IDLE_ environment is recommended for running |FiPy|. In order to
have interactive viewing capabilities the ``-n`` option is
required. To run IDLE_ with the ``-n`` option follow the following
instructions:

   - Click on ``Start``
   - Click on ``Programs``
   - Click on ``Python 2.3 (Enthought Edition)``
   - Right click on ``IDLE (Python GUI)`` and click on ``Create Shortcut`` which creates ``IDLE (Python GUI)(2)``
   - Right click on ``IDLE (Python GUI)(2)``
   - Click on properties
   - Add the ``-n`` option to ``Target`` being sure to leave a space after the last quote and before ``-n``
   - Drag and drop ``IDLE (Python GUI)(2)`` to the desktop to create an icon.

Step 9: Import a module and view the results
--------------------------------------------

You can use the IDLE_ path browser to find |FiPy| examples. For
example to run the 2D diffusion example,

    - Click on ``File``
    - Click on ``Path Browser``
    - Click on ``C:\Python23\lib\site-packages``
    - Click on ``examples``
    - Click on ``diffusion``
    - Click on ``steadyState``
    - Click on ``mesh50x50``
    - Click on ``input.py``

This will open an editor simple press the F5 key to run the example.
A Matplotlib viewer should appear with rainbow stripes.

Another way to use |FiPy| examples is to import the example file and
then run any functionality it may have. For example at the IDLE_
command line run the following code:

    >>> from examples.levelSet.electroChem.inputGold import runGold.
    >>> runGold(numberOfSteps = 100)

A MayaVi viewer should appear with a trench filling simulation.

   .. _IDLE: http://www.nist.gov/cgi-bin/exit_nist.cgi?url=http://www.python.org/idle/

   .. |FiPy| replace:: |htmlFiPy| |latexFiPy|
