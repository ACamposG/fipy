## -*-Pyth-*-
 # ###################################################################
 #  FiPy - a finite volume PDE solver in Python
 # 
 #  FILE: "includedHTMLWriter.py"
 #
 #  Author: Jonathan Guyer <guyer@nist.gov>
 #  Author: Daniel Wheeler <daniel.wheeler@nist.gov>
 #  Author: James Warren   <jwarren@nist.gov>
 #  Author: James Warren <jwarren@nist.gov>
 #    mail: NIST
 #     www: http://www.ctcms.nist.gov/fipy/
 #  
 # ========================================================================
 # This document was prepared at the National Institute of Standards
 # and Technology by employees of the Federal Government in the course
 # of their official duties.  Pursuant to title 17 Section 105 of the
 # United States Code this document is not subject to copyright
 # protection and is in the public domain.  includedHTMLWriter.py
 # is an experimental work.  NIST assumes no responsibility whatsoever
 # for its use by other parties, and makes no guarantees, expressed
 # or implied, about its quality, reliability, or any other characteristic.
 # We would appreciate acknowledgement if the document is used.
 # 
 # This document can be redistributed and/or modified freely
 # provided that any derivative works bear some notice that they are
 # derived from it, and any modified versions bear some notice that
 # they have been modified.
 # ========================================================================
 #  See the file "license.terms" for information on usage and  redistribution of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 #  
 # ###################################################################
 ##

import os

from docutils.writers.html4css1 import HTMLTranslator, Writer as HTMLWriter
from docutils import languages

class IncludedHTMLTranslator(HTMLTranslator):
##     def __init__(self, document):
## 	HTMLTranslator.__init__(self, document)
## 	
##         # HEAD PREFIX
## 
## 	self.head_prefix.insert(0, r"""<!--
## This file was automatically generated by invoking
## 
##     python setup.py build_docs <dash><dash>webpage
##     
## Any changes to the contents should be made in the file '""" + document.attributes['source'] + r"""'
## -->
## """)
## 	
## 	self.body_prefix.insert(0, r"""<link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
## """)
## 
## 	# BODY PREFIX
##         
## 	import urllib
##         
## ##         headObj = urllib.urlopen("http://www.ctcms.nist.gov/CSS/banner.html")
##         headObj = urllib.urlopen("http://localhost/CSS/banner.html")
##         head = headObj.read()
##         headObj.close()
##         
## 	self.body_prefix.append(head)
##         
##         dir = os.path.join('documentation', 'www')
## 
## 	menuObj = open(os.path.join(dir, 'menu.html'))
## 	menu = menuObj.read()
##         menuObj.close()
## 
##         self.body_prefix.append(menu)
## 
##         self.body_prefix.extend(['\n','<div id="logo">','\n','<img src="img/logo.png" alt="logo" width="60" height="60"/>','\n','</div>','\n'])
## 
##         self.body_prefix.extend(['\n','<div id="main">','\n'])
## 
##         self.body_prefix.extend(['\n','<h1 id="projectTitle">FiPy: A Finite Volume PDE Solver Using Python</h1>','\n'])
##         
##         # BODY SUFFIX
##         
## 
##         suffix = []
##         
##         suffix.extend(['\n','</div>','\n'])
## 
## ##         headObj = urllib.urlopen("http://www.ctcms.nist.gov/CSS/footer.html")
##         footObj = urllib.urlopen("http://localhost/CSS/footer.html")
##         foot = footObj.read()
##         footObj.close()
## 
##         import time
##         mtime = time.localtime(os.stat(document.attributes['source']).st_mtime)
##         modifiedTime = time.strftime("%A, %d %B %Y %H:%M:%S %Z", mtime)
##         
##         import re
##         foot = re.sub(r'<!-- LASTMODIFIED -->', modifiedTime, foot)
## 
##         suffix.append(foot)
##         
##         suffix.append(r"""<div id="validation">
##   <a href="http://jigsaw.w3.org/css-validator">
##   <img style="border:0;width:88px;height:31px" src="http://jigsaw.w3.org/css-validator/images/vcss" 
##   alt="Valid CSS!" /></a><br>
##   <a href="http://validator.w3.org/check?uri=referer"><img
##       src="http://www.w3.org/Icons/valid-xhtml10"
##       alt="Valid XHTML 1.0!" height="31" width="88" /></a>
## </div>
## """)
##         
##         # .insert() doesn't do what we want with a list
##         self.body_suffix[0:0] = suffix
    def __init__(self, document):
        HTMLTranslator.__init__(self, document)
        
        # HEAD PREFIX

        self.head_prefix = [r"""<!--
This file was automatically generated by invoking

python setup.py build_docs <dash><dash>webpage

Any changes to the contents should be made in the file '""" + document.attributes['source'] + r"""'
-->
"""]

        # HEAD
        
##         self.head = []
        
        # STYLESHEET
        
##         self.stylesheet = []
        
        # BODY PREFIX
        
##         self.body_prefix.insert(0, r"""<link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
##     """)

##         import urllib
        
    ##         headObj = urllib.urlopen("http://www.ctcms.nist.gov/CSS/banner.html")
##         headObj = urllib.urlopen("http://localhost/CSS/banner.html")
##         head = headObj.read()
##         headObj.close()
##         
##         self.body_prefix.append(head)
##         
##         dir = os.path.join('documentation', 'www')
## 
##         menuObj = open(os.path.join(dir, 'menu.html'))
##         menu = menuObj.read()
##         menuObj.close()
## 
##         self.body_prefix.append(menu)

## 	self.body_prefix = []

##         self.body_prefix.extend(['\n','<div id="logo">','\n','<img src="img/logo.png" alt="logo" width="60" height="60"/>','\n','</div>','\n'])

##         self.body_prefix.extend(['\n','<div id="main">','\n'])

##         self.body_prefix.extend(['\n','<h1 id="projectTitle">FiPy: A Finite Volume PDE Solver Using Python</h1>','\n'])
        
        # BODY SUFFIX
        

##         suffix = []
        
##         suffix.extend(['\n','</div>','\n'])

    ##         headObj = urllib.urlopen("http://www.ctcms.nist.gov/CSS/footer.html")
##         footObj = urllib.urlopen("http://localhost/CSS/footer.html")
##         foot = footObj.read()
##         footObj.close()
## 
##         import time
##         mtime = time.localtime(os.stat(document.attributes['source']).st_mtime)
##         modifiedTime = time.strftime("%A, %d %B %Y %H:%M:%S %Z", mtime)
##         
##         import re
##         foot = re.sub(r'<!-- LASTMODIFIED -->', modifiedTime, foot)
## 
##         suffix.append(foot)
##         
##         suffix.append(r"""<div id="validation">
##   <a href="http://jigsaw.w3.org/css-validator">
##   <img style="border:0;width:88px;height:31px" src="http://jigsaw.w3.org/css-validator/images/vcss" 
##   alt="Valid CSS!" /></a><br>
##   <a href="http://validator.w3.org/check?uri=referer"><img
##   src="http://www.w3.org/Icons/valid-xhtml10"
##   alt="Valid XHTML 1.0!" height="31" width="88" /></a>
## </div>
## """)
        
        # .insert() doesn't do what we want with a list
##         self.body_suffix[0:0] = suffix

##         self.body_suffix = suffix

    def astext(self):
        return ''.join(self.head_prefix
                       + self.body_pre_docinfo + self.docinfo
                       + self.body)


class IncludedHTMLWriter(HTMLWriter):
    def __init__(self):
	HTMLWriter.__init__(self)
	self.translator_class = IncludedHTMLTranslator

